{
  "title": "Validation report for pangaea.terranexus.dggs.api.OGC-API-DGGS_ZoneQuery-ZoneList_JSON-Encoding - OGC API DGGS",
  "bblockName": "OGC API DGGS",
  "bblockId": "pangaea.terranexus.dggs.api.OGC-API-DGGS_ZoneQuery-ZoneList_JSON-Encoding",
  "generated": "2024-09-13T10:21:28.218533+00:00",
  "result": false,
  "items": [
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "build/tests/terranexus/dggs/api/OGC-API-DGGS_ZoneQuery-ZoneList_JSON-Encoding/example_2_1.json",
        "url": "https://geofizzydrink.github.io/test_bblock/build/tests/terranexus/dggs/api/OGC-API-DGGS_ZoneQuery-ZoneList_JSON-Encoding/example_2_1.json",
        "exampleIndex": 2,
        "snippetIndex": 1,
        "language": "json"
      },
      "result": false,
      "sections": [
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_2_1.json from examples"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": false,
              "exception": "ValidationError",
              "errorMessage": "'zones' is a required property",
              "isError": true,
              "message": "ValidationError: 'zones' is a required property\n\nFailed validating 'required' in schema:\n    {'$defs': {'link': {'properties': {'href': {'description': 'Supplies '\n                                                               'the URI to '\n                                                               'a remote '\n                                                               'resource '\n                                                               '(or '\n                                                               'resource '\n                                                               'fragment).',\n                                                'example': 'http://data.example.com/buildings/123',\n                                                'type': 'string'},\n                                       'hreflang': {'description': 'A hint '\n                                                                   'indicating '\n                                                                   'what '\n                                                                   'the '\n                                                                   'language '\n                                                                   'of the '\n                                                                   'result '\n                                                                   'of '\n                                                                   'dereferencing '\n                                                                   'the '\n                                                                   'link '\n                                                                   'should '\n                                                                   'be.',\n                                                    'example': 'en',\n                                                    'type': 'string'},\n                                       'length': {'type': 'integer'},\n                                       'rel': {'description': 'The type or '\n                                                              'semantics '\n                                                              'of the '\n                                                              'relation.',\n                                               'example': 'alternate',\n                                               'type': 'string'},\n                                       'title': {'description': 'Used to '\n                                                                'label the '\n                                                                'destination '\n                                                                'of a link '\n                                                                'such that '\n                                                                'it can be '\n                                                                'used as a '\n                                                                'human-readable '\n                                                                'identifier.',\n                                                 'example': 'Trierer '\n                                                            'Strasse 70, '\n                                                            '53115 Bonn',\n                                                 'type': 'string'},\n                                       'type': {'description': 'A hint '\n                                                               'indicating '\n                                                               'what the '\n                                                               'media type '\n                                                               'of the '\n                                                               'result of '\n                                                               'dereferencing '\n                                                               'the link '\n                                                               'should be.',\n                                                'example': 'application/geo+json',\n                                                'type': 'string'}},\n                        'required': ['href', 'rel'],\n                        'type': 'object'}},\n     '$schema': 'https://json-schema.org/draft/2020-12/schema',\n     'description': 'JSON response for the DGGRS zone list resource.type = '\n                    'object',\n     'properties': {'links': {'items': {'$ref': '#/$defs/link'},\n                              'type': 'array'},\n                    'returnedAreaMetersSquare': {'type': 'number'},\n                    'returnedHyperVolumeMetersCubeSeconds': {'type': 'number'},\n                    'returnedVolumeMetersCube': {'type': 'number'},\n                    'returnedVolumeMetersSquareSeconds': {'type': 'number'},\n                    'zones': {'items': {'type': 'string'},\n                              'type': 'array'}},\n     'required': ['zones'],\n     'title': 'OGC API DGGS - Zone Query JSON encoding response.'}\n\nOn instance:\n    {'basePolyhedron': 'Icosahedron',\n     'gridConstraint': ['cellEqualSized', 'cellConformal'],\n     'referenceSystemType': {'CRS': 'EPSG:7789',\n                             'GLOBE': 'EPGS:7019',\n                             'MDRS': 'TerraNexus_S_IT9_GRS80_2d10b58e2088c7e2-topological',\n                             'ZIRS': 'TopologicalMortonCode'},\n     'refinementRatio': 9,\n     'refinementStrategy': 'nestedChildCell',\n     'surfaceInterpolation': 'elliptical',\n     'zoneGeometry': {'zoneType': 'triangle'}}"
            }
          ]
        },
        {
          "name": "UNKNOWN",
          "title": "Unknown errors",
          "entries": [
            {
              "exception": "AttributeError",
              "isError": true,
              "message": "Traceback (most recent call last):\n,  File \"/src/ogc/bblocks/validate.py\", line 184, in _validate_resource\n    result = validator.validate(filename, output_filename, report,\n,  File \"/src/ogc/bblocks/validation/rdf.py\", line 299, in validate\n    graph = self._load_graph(filename, output_filename, report, contents, base_uri, prefixes)\n,  File \"/src/ogc/bblocks/validation/rdf.py\", line 146, in _load_graph\n    if not self.jsonld_context and not self.prefixes:\n,AttributeError: 'RdfValidator' object has no attribute 'prefixes'\n"
            }
          ]
        }
      ]
    }
  ],
  "globalErrors": {},
  "counts": {
    "total": 1,
    "passed": 0,
    "failed": 1
  }
}